{"version":3,"sources":["app.js"],"names":[],"mappings":";;AAAA,IAAI,UAAU,QAAQ,SAAR,CAAd;AACA,IAAI,OAAO,QAAQ,MAAR,CAAX;AACA,IAAI,UAAU,QAAQ,eAAR,CAAd;AACA,IAAI,SAAS,QAAQ,QAAR,CAAb;AACA,IAAI,eAAe,QAAQ,eAAR,CAAnB;AACA,IAAI,aAAa,QAAQ,aAAR,CAAjB;AACA,IAAI,UAAU,QAAQ,iBAAR,CAAd;AACA,IAAI,OAAO,QAAQ,MAAR,CAAX;;AAEA,IAAI,QAAQ,QAAQ,gBAAR,CAAZ;AACA,IAAI,OAAO,QAAQ,eAAR,CAAX;AACA,IAAI,WAAW,QAAQ,mBAAR,CAAf;AACA,IAAI,UAAU,QAAQ,kBAAR,CAAd;AACA,IAAI,OAAO,QAAQ,eAAR,CAAX;AACA,IAAI,UAAU,QAAQ,kBAAR,CAAd;AACA,IAAI,QAAQ,QAAQ,gBAAR,CAAZ;AACA,IAAI,SAAS,QAAQ,iBAAR,CAAb;;AAEA,IAAI,MAAM,SAAV;;AAEA,IAAI,OAAJ,CAAY,cAAZ;;AAEA;AACA,IAAI,GAAJ,CAAQ,OAAR,EAAiB,KAAK,IAAL,CAAU,SAAV,EAAqB,OAArB,CAAjB;AACA,IAAI,GAAJ,CAAQ,aAAR,EAAuB,MAAvB;;AAEA,IAAI,GAAJ,CAAQ,KAAK;AACX,UAAQ,GADG;AAEX,WAAS,wCAFE;AAGX,kBAAgB,6CAHL;AAIX,eAAa,IAJF,CAIO;AAJP,CAAL,CAAR;;AAOA,IAAI,GAAJ,CAAQ,QAAQ;AACd,UAAQ,cADM;AAEd,UAAQ,IAFM;AAGd,qBAAmB;AAHL,CAAR,CAAR;;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,IAAI,GAAJ,CAAQ,OAAO,KAAP,CAAR;AACA,IAAI,GAAJ,CAAQ,WAAW,IAAX,EAAR;AACA,IAAI,GAAJ,CAAQ,WAAW,UAAX,CAAsB,EAAE,UAAU,KAAZ,EAAtB,CAAR;AACA,IAAI,GAAJ,CAAQ,cAAR;AACA,IAAI,GAAJ,CAAQ,QAAQ,MAAR,CAAe,KAAK,IAAL,CAAU,SAAV,EAAqB,QAArB,CAAf,CAAR;;AAGA,IAAI,GAAJ,CAAQ,GAAR,EAAa,KAAb;AACA,IAAI,GAAJ,CAAQ,OAAR,EAAiB,IAAjB;AACA,IAAI,GAAJ,CAAQ,WAAR,EAAqB,QAArB;AACA,IAAI,GAAJ,CAAQ,UAAR,EAAoB,OAApB;AACA,IAAI,GAAJ,CAAQ,OAAR,EAAiB,IAAjB;AACA,IAAI,GAAJ,CAAQ,UAAR,EAAoB,OAApB;AACA,IAAI,GAAJ,CAAQ,QAAR,EAAmB,KAAnB;AACA,IAAI,GAAJ,CAAQ,SAAR,EAAmB,MAAnB;;AAEA;AACA,IAAI,GAAJ,CAAQ,UAAS,GAAT,EAAc,GAAd,EAAmB,IAAnB,EAAyB;AAC/B,MAAI,MAAM,IAAI,KAAJ,CAAU,WAAV,CAAV;AACA,MAAI,MAAJ,GAAa,GAAb;AACA,OAAK,GAAL;AACD,CAJD;;AAMA;AACA,IAAI,GAAJ,CAAQ,UAAS,GAAT,EAAc,GAAd,EAAmB,GAAnB,EAAwB,IAAxB,EAA8B;AACpC;AACA,MAAI,MAAJ,CAAW,OAAX,GAAqB,IAAI,OAAzB;AACA,MAAI,MAAJ,CAAW,KAAX,GAAmB,IAAI,GAAJ,CAAQ,GAAR,CAAY,KAAZ,MAAuB,aAAvB,GAAuC,GAAvC,GAA6C,EAAhE;;AAEA;AACA,MAAI,MAAJ,CAAW,IAAI,MAAJ,IAAc,GAAzB;AACA,MAAI,MAAJ,CAAW,OAAX;AACD,CARD;;AAUA,OAAO,OAAP,GAAiB,GAAjB","file":"app-compiled.js","sourcesContent":["var express = require('express');\r\nvar path = require('path');\r\nvar favicon = require('serve-favicon');\r\nvar logger = require('morgan');\r\nvar cookieParser = require('cookie-parser');\r\nvar bodyParser = require('body-parser');\r\nvar session = require('express-session');\r\nvar cors = require('cors');\r\n\r\nvar index = require('./routes/index');\r\nvar user = require('./routes/user');\r\nvar products = require('./routes/products');\r\nvar product = require('./routes/product');\r\nvar cart = require('./routes/cart');\r\nvar address = require('./routes/address');\r\nvar order = require('./routes/order');\r\nvar myPage = require('./routes/myPage');\r\n\r\nvar app = express();\r\n\r\napp.disable('x-powered-by');\r\n\r\n// view engine setup\r\napp.set('views', path.join(__dirname, 'views'));\r\napp.set('view engine', 'jade');\r\n\r\napp.use(cors({\r\n  origin: \"*\",\r\n  methods: \"GET, POST, OPTIONS, PUT, PATCH, DELETE\",\r\n  allowedHeaders: \"X-Requested-With,Content-Type,Authorization\",\r\n  credentials: true // enable set cookie\r\n}));\r\n\r\napp.use(session({\r\n  secret: '2atm0r2Gr22N',\r\n  resave: true,\r\n  saveUninitialized: true\r\n}));\r\n\r\n// app.use(function (req, res, next) {\r\n//   // Website you wish to allow to connect\r\n//   res.setHeader('Access-Control-Allow-Origin', '*');\r\n//\r\n//   // Request methods you wish to allow\r\n//   res.setHeader('Access-Control-Allow-Methods', 'GET, POST, OPTIONS, PUT, PATCH, DELETE');\r\n//\r\n//   // Request headers you wish to allow\r\n//   res.setHeader('Access-Control-Allow-Headers', 'X-Requested-With,content-type');\r\n//\r\n//   // Set to true if you need the website to include cookies in the requests sent\r\n//   // to the API (e.g. in case you use sessions)\r\n//   res.setHeader('Access-Control-Allow-Credentials', true);\r\n//\r\n//   // Pass to next layer of middleware\r\n//   next();\r\n// });\r\n\r\n// uncomment after placing your favicon in /public\r\n//app.use(favicon(path.join(__dirname, 'public', 'favicon.ico')));\r\napp.use(logger('dev'));\r\napp.use(bodyParser.json());\r\napp.use(bodyParser.urlencoded({ extended: false }));\r\napp.use(cookieParser());\r\napp.use(express.static(path.join(__dirname, 'public')));\r\n\r\n\r\napp.use('/', index);\r\napp.use('/user', user);\r\napp.use('/products', products);\r\napp.use('/product', product);\r\napp.use('/cart', cart);\r\napp.use('/address', address);\r\napp.use('/order',  order);\r\napp.use('/mypage', myPage);\r\n\r\n// catch 404 and forward to error handler\r\napp.use(function(req, res, next) {\r\n  var err = new Error('Not Found');\r\n  err.status = 404;\r\n  next(err);\r\n});\r\n\r\n// error handler\r\napp.use(function(err, req, res, next) {\r\n  // set locals, only providing error in development\r\n  res.locals.message = err.message;\r\n  res.locals.error = req.app.get('env') === 'development' ? err : {};\r\n\r\n  // render the error page\r\n  res.status(err.status || 500);\r\n  res.render('error');\r\n});\r\n\r\nmodule.exports = app;\r\n"]}
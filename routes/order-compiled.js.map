{"version":3,"sources":["order.js"],"names":[],"mappings":"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","file":"order-compiled.js","sourcesContent":["import express from 'express';\r\nimport { pool } from './DBconfig';\r\nimport { queryConductor } from './queryConductor';\r\n\r\nconst router = express.Router();\r\n\r\nrouter.get(\"/\", (req, res, next) => {\r\n  pool.getConnection((err, connection) => {\r\n    if (err) throw err;\r\n\r\n    const query = ``;\r\n\r\n    queryConductor(connection, query)\r\n      .then(results => {\r\n        res.json({results});\r\n\r\n        connection.release();\r\n      })\r\n  })\r\n}).post(\"/\", (req, res) => {\r\n  pool.getConnection((err, connection) => {\r\n    if (err) throw err;\r\n\r\n    const data = req.body;\r\n    const orderKeys = Object.keys(data).filter(key => {\r\n      return key !== \"items\"\r\n    });\r\n    const { items } = data;\r\n\r\n    connection.beginTransaction(err => {\r\n      if (err) throw err;\r\n\r\n      new Promise((resolve, reject) => {\r\n        let orderKeyString = \"\";\r\n        let orderValueString = \"\";\r\n\r\n        orderKeys.forEach((key) => {\r\n          orderKeyString += key + \", \";\r\n\r\n          // if (key === \"user_id\" || key === \"status\" || key === \"total_price\")\r\n          //   orderValueString += `${data[key]}, `;\r\n          // else\r\n          //  // for string values\r\n          orderValueString += `\"${data[key]}\", `;\r\n        });\r\n\r\n        orderKeyString += \"date\";\r\n        orderValueString += \"now()\";\r\n\r\n        // cart_detail 의 status 바꿔줘야해\r\n        // order_detail에 cart_detail에 있는 내용들 넣어줘야해\r\n\r\n        const query =\r\n          `INSERT INTO \\`order\\`\r\n                (${orderKeyString})\r\n         VALUES (${orderValueString})`;\r\n\r\n        queryConductor(connection, query)\r\n          .then((results) => {\r\n            resolve({results})\r\n          }).catch(err => {\r\n            connection.rollback(() => {\r\n              throw err\r\n            })\r\n          })\r\n      }).then(({results}) => {\r\n        const orderId = results.insertId;\r\n\r\n        const query =\r\n          `INSERT INTO order_detail\r\n                (order_id, product_id, product_option_id, count)\r\n                SELECT \"${orderId}\", product_id, product_option_id, count\r\n                  FORM cart_detail\r\n                 WHERE user_id = ${data.user_id}\r\n                   AND status = 0`;\r\n\r\n        return queryConductor(connection, query)\r\n          .catch(err => {\r\n            connection.rollback(() => {\r\n              throw err\r\n            })\r\n          })\r\n      }).then(() => {\r\n        const query =\r\n          `UPDATE cart_detail\r\n            SET status = 1\r\n          WHERE user_id = ${data.user_id}\r\n            AND status = 0`;\r\n\r\n        return queryConductor(connection, query)\r\n          .then(() => {\r\n            connection.commit(err => {\r\n              if (err)\r\n                connection.rollback(() => {\r\n                  throw err;\r\n                })\r\n            })\r\n          }).catch(err => {\r\n            connection.rollback(() => {\r\n              throw err;\r\n            })\r\n          })\r\n      }).then(() => {\r\n        console.log(\"Post order success\");\r\n        connection.release();\r\n      }).catch(err => {\r\n        if (err) throw err;\r\n        connection.release();\r\n      });\r\n    })\r\n  })\r\n});\r\n\r\nmodule.exports = router;"]}
{"version":3,"sources":["myPage.js"],"names":[],"mappings":";;AAAA;;;;AACA;;AACA;;;;AAEA,IAAM,SAAS,kBAAQ,MAAR,EAAf;;AAEA,OAAO,GAAP,CAAW,QAAX,EAAqB,UAAC,GAAD,EAAM,GAAN,EAAW,IAAX,EAAoB;AACvC,MAAI;AACF,mBAAK,aAAL,CAAmB,UAAC,GAAD,EAAM,UAAN,EAAqB;AACtC,UAAI,GAAJ,EAAS,MAAM,GAAN;AAD6B,UAE9B,MAF8B,GAEnB,IAAI,KAFe,CAE9B,MAF8B;;;AAItC,UAAM,sEAGc,MAHpB;;AAKA,0CAAe,UAAf,EAA2B,KAA3B,EACG,IADH,CACQ,kBAAU;AACd,YAAI,gBAAgB,EAApB;;AAEA,eAAO,OAAP,CAAe,UAAC,KAAD,EAAQ,KAAR,EAAe,KAAf,EAAyB;AACtC,2BAAiB,UAAW,MAAM,MAAN,GAAe,CAA1B,GAA+B,MAAM,EAArC,GAA6C,MAAM,EAAnD,OAAjB;AACD,SAFD;;AAIA,YAAM,sFAGiB,aAHjB,MAAN;;AAKA,4CAAe,UAAf,EAA2B,KAA3B,EACG,IADH,CACQ,yBAAiB;AACrB;AACA;;;AAGA,iBAAO,OAAP,CAAe,iBAAS;AACtB,kBAAM,aAAN,GAAsB,cAAc,MAAd,CAAqB,wBAAgB;AACzD,qBAAO,MAAM,EAAN,KAAa,aAAa,QAAjC;AACD,aAFqB,CAAtB;AAGD,WAJD;;AAMA,cAAI,IAAJ,CAAS,EAAC,cAAD,EAAT;AACA,qBAAW,OAAX;AACD,SAdH,EAcK,eAAO;AACR,kBAAQ,GAAR,CAAY,+DAAZ;AACA,qBAAW,OAAX;AACA,gBAAM,GAAN;AACD,SAlBH;AAmBD,OAhCH,EAgCK,eAAO;AACR,gBAAQ,GAAR,CAAY,wDAAZ;AACA,mBAAW,OAAX;AACA,cAAM,GAAN;AACD,OApCH;AAqCD,KA9CD;AA+CD,GAhDD,CAgDE,OAAM,GAAN,EAAW;AACX,QAAI,IAAJ,CAAS,EAAC,QAAD,EAAT;AACD;AACF,CApDD;;AAsDA,OAAO,OAAP,GAAiB,MAAjB","file":"myPage-compiled.js","sourcesContent":["import express from 'express';\r\nimport { pool } from './DBconfig';\r\nimport { queryConductor } from './queryConductor';\r\n\r\nconst router = express.Router();\r\n\r\nrouter.get(\"/order\", (req, res, next) => {\r\n  try {\r\n    pool.getConnection((err, connection) => {\r\n      if (err) throw err;\r\n      const { userId } = req.query;\r\n\r\n      const query =\r\n        `SELECT *\r\n         FROM \\`order\\`\r\n        WHERE user_id = ${userId}`;\r\n\r\n      queryConductor(connection, query)\r\n        .then(orders => {\r\n          let orderIdString = \"\";\r\n\r\n          orders.forEach((order, index, array) => {\r\n            orderIdString += index === (array.length - 1) ? order.id : `${order.id}, `;\r\n          });\r\n\r\n          const query =\r\n            `SELECT *\r\n             FROM order_detail\r\n            WHERE order_id in (${orderIdString})`;\r\n\r\n          queryConductor(connection, query)\r\n            .then(order_details => {\r\n              // order_detail의 product_id / product_option_id 별로 product, product_option에서\r\n              // 정보 가져와서 json만들어서 response해야해\r\n\r\n\r\n              orders.forEach(order => {\r\n                order.order_details = order_details.filter(order_detail => {\r\n                  return order.id === order_detail.order_id;\r\n                })\r\n              });\r\n\r\n              res.json({orders});\r\n              connection.release();\r\n            }, err => {\r\n              console.log(\"Error occurs while SELECT FROM order_detail in getMyPageOrder\");\r\n              connection.release();\r\n              throw err;\r\n            });\r\n        }, err => {\r\n          console.log(\"Error occurs while SELECT FROM order in getMyPageOrder\");\r\n          connection.release();\r\n          throw err;\r\n        })\r\n    })\r\n  } catch(err) {\r\n    res.json({err});\r\n  }\r\n});\r\n\r\nmodule.exports = router;"]}
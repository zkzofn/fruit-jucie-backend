{"version":3,"sources":["address.js"],"names":[],"mappings":";;AAAA;;;;AACA;;AACA;;AACA;;;;AAEA,IAAM,SAAS,kBAAQ,MAAR,EAAf;;AAEA;;;;;;;;;;;AAWA,OAAO,GAAP,CAAW,GAAX,EAAgB,UAAC,GAAD,EAAM,GAAN,EAAW,IAAX,EAAoB;AAClC,MAAM,aAAa,IAAI,OAAJ,CAAY,aAA/B;AACA,MAAM,cAAc,uBAAY,UAAZ,CAApB;;AAEA,iBAAK,aAAL,CAAmB,UAAC,GAAD,EAAM,UAAN,EAAqB;AACtC,QAAI,GAAJ,EAAS;AACP,cAAQ,GAAR,CAAY,GAAZ;AACA,UAAI,IAAJ,CAAS,EAAC,QAAD,EAAT;AACD,KAHD,MAGO;AACL,UAAM,0LAIgB,YAAY,OAJ5B,eAAN;;AAOA,0CAAe,UAAf,EAA2B,KAA3B,EAAkC,IAAlC,CAAuC,uBAAe;AACpD,YAAI,IAAJ,CAAS,EAAC,wBAAD,EAAT;AACA,mBAAW,OAAX;AACD,OAHD;AAID;AACF,GAjBD;AAkBD,CAtBD;;AAwBA,OAAO,OAAP,GAAiB,MAAjB","file":"address-compiled.js","sourcesContent":["import express from 'express';\r\nimport { pool } from './DBconfig';\r\nimport { queryConductor } from './queryConductor';\r\nimport { getAuthUser } from './auth';\r\n\r\nconst router = express.Router();\r\n\r\n/**\r\n * @file /routes/address.js\r\n * @brief GET address API\r\n * @author 이장호\r\n * @date 2018-03-27\r\n *\r\n * @sequence\r\n * 1. 사용자가 등록한 주소 목록을 return\r\n *\r\n * @return addressList<Object>\r\n */\r\nrouter.get(\"/\", (req, res, next) => {\r\n  const sessionKey = req.headers.authorization;\r\n  const sessionUser = getAuthUser(sessionKey);\r\n\r\n  pool.getConnection((err, connection) => {\r\n    if (err) {\r\n      console.log(err);\r\n      res.json({err});\r\n    } else {\r\n      const query = `\r\n      SELECT A.id, A.user_id, A.address1, A.address2, A.zipcode\r\n        FROM address AS A INNER JOIN user AS B\r\n          ON A.user_id = B.id\r\n       WHERE B.account = '${sessionUser.account}'\r\n      `;\r\n\r\n      queryConductor(connection, query).then(addressList => {\r\n        res.json({addressList});\r\n        connection.release();\r\n      })\r\n    }\r\n  })\r\n});\r\n\r\nmodule.exports = router;"]}